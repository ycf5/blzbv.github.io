WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.205
Join 的复杂性在于可以做各种不同类型的分析

00:00:05.205 --> 00:00:08.500
整合数据本身并不是它的最终目的

00:00:08.500 --> 00:00:13.289
它只是一种工具 让你能筛选或整合一个扩充的信息集

00:00:13.289 --> 00:00:17.009
这也意味着涉及查询的 Join 可能会非常复杂

00:00:17.010 --> 00:00:19.403
要得到你需要的具体结果

00:00:19.402 --> 00:00:22.729
你就要非常仔细地考虑如何筛选数据

00:00:22.730 --> 00:00:25.199
而使用 Join 的话 你就有多种选择

00:00:25.199 --> 00:00:27.269
为了说明这一点

00:00:27.269 --> 00:00:30.489
现在让我们来看看由一个销售代表带来的所有订单

00:00:30.489 --> 00:00:33.809
假设你是 Parch &amp; Posey 的一名销售经理

00:00:33.810 --> 00:00:36.900
你当然希望你的销售代表能轻松地找到自己完成的交易

00:00:36.899 --> 00:00:41.004
而不是要查阅所有订单 回忆哪些是自己完成的

00:00:41.005 --> 00:00:44.100
要记住 订单表格中没有销售代表 ID

00:00:44.100 --> 00:00:47.170
所以不需要通过 Join 来得到此信息

00:00:47.170 --> 00:00:49.200
筛选这类数据的第一种方法是我们非常熟悉的

00:00:49.200 --> 00:00:52.085
WHERE 子句

00:00:52.085 --> 00:00:55.980
现在我们来找出整合后的订单和账户表格 对结果集进行筛选

00:00:55.979 --> 00:01:01.289
找出仅由一位编号 321500 的销售代表完成的订单

00:01:01.289 --> 00:01:03.929
可以看到 结果集中仅包括

00:01:03.929 --> 00:01:07.019
符合 WHERE 子句标准的行

00:01:07.019 --> 00:01:12.079
即销售代表 ID 为 321500 的行

00:01:12.079 --> 00:01:15.120
但是 如果我们想要标记所有由 321500 代表完成的订单

00:01:15.120 --> 00:01:19.950
同时将所有其他订单保留在结果集中呢？

00:01:19.950 --> 00:01:22.784
我们可以通过 ON 子句进行筛选

00:01:22.784 --> 00:01:25.200
将 WHERE 改为 AND

00:01:25.200 --> 00:01:29.344
就让这个逻辑语句变为了 ON 子句的一部分

00:01:29.344 --> 00:01:32.855
这样能在连接前有效地对右边表格进行预筛选

00:01:32.855 --> 00:01:38.335
仅筛选出销售代表 ID 为 321500 的相关行

00:01:38.334 --> 00:01:43.464
也就是说 就像是在连接前而不是连接后使用 WHERE 子句一样

00:01:43.465 --> 00:01:47.344
你可以把它看成将订单连接至另外一个表格

00:01:47.344 --> 00:01:52.224
这个表格只包括最初账户表格某些行的子集

00:01:52.224 --> 00:01:54.194
由于这是 Left Join

00:01:54.194 --> 00:01:58.684
结果集列出的是 订单表格的所有行

00:01:58.685 --> 00:02:01.200
以及新的预筛选表格中

00:02:01.200 --> 00:02:04.920
与订单表格中账户 ID 相匹配的数据

00:02:04.920 --> 00:02:09.944
你可以看到 销售代表 321500 只对应少数账户

00:02:09.944 --> 00:02:13.250
大量订单并没有与之匹配

00:02:13.250 --> 00:02:17.294
这个结果集含有大量没有账户名称的订单 看上去似乎没有意义

00:02:17.294 --> 00:02:19.739
但是在下一课学习数据聚合时

00:02:19.740 --> 00:02:22.390
你会发现这种 Join 出乎意料地有用

