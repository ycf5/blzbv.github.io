WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.629
如果我们想展示的数据并未同时存在于两张表格

00:00:03.629 --> 00:00:07.410
而只存在于其中一张表格

00:00:07.410 --> 00:00:11.865
我们有三种连接类型可用 Left Join、

00:00:11.865 --> 00:00:15.804
Right join 以及 Full Outer Join

00:00:15.804 --> 00:00:19.230
每种 Join 都会显示 Inner Join 的所有结果行

00:00:19.230 --> 00:00:22.274
并额外包含一些其他行

00:00:22.274 --> 00:00:27.209
所以 Outer Join 的结果数至少与 Inner Join 的结果数相同

00:00:27.210 --> 00:00:30.535
只要有相同的 ON 子句

00:00:30.535 --> 00:00:36.280
本视频将着重讲述 Left 与 Right Join

00:00:36.280 --> 00:00:39.070
在我们的 SELECT 语句中

00:00:39.070 --> 00:00:43.500
FROM 语句中列出的表格被看作左表

00:00:43.500 --> 00:00:47.234
而 JOIN 中的表格为右表

00:00:47.234 --> 00:00:49.924
让我们把 Inner Join 改为 Left Join

00:00:49.924 --> 00:00:52.529
只需要简单地写下 LEFT

00:00:52.530 --> 00:00:54.189
这样我们得到的结果

00:00:54.189 --> 00:00:57.099
包括了能匹配右表的所有结果

00:00:57.100 --> 00:00:58.695
这部分与 Inner Join 的结果一样

00:00:58.695 --> 00:01:04.079
同时它还会返回左表中没有匹配项的所有结果

00:01:04.079 --> 00:01:08.299
使用这些账户和订单表格的子集

00:01:08.299 --> 00:01:10.984
这个订单表格中的每一行

00:01:10.984 --> 00:01:13.429
都可以匹配到账户表格的对应行

00:01:13.430 --> 00:01:15.650
因为账户表格中的 id

00:01:15.650 --> 00:01:19.335
与订单表格的 account_id 相对应

00:01:19.334 --> 00:01:23.729
这个结果集与 Inner Join 完全一致

00:01:23.730 --> 00:01:28.594
而 Right Join 的结果则会不太一样

00:01:28.594 --> 00:01:31.674
这里有四个没有订单的账户

00:01:31.674 --> 00:01:36.344
意味着有四行数据不满足 Join 的条件

00:01:36.344 --> 00:01:38.890
因为现在是 Right Join 而不是 Inner Join

00:01:38.890 --> 00:01:42.034
所以这几行也会显示在结果集的底部

00:01:42.034 --> 00:01:44.439
由于它们在左表中没有匹配的行

00:01:44.439 --> 00:01:49.179
所以左表中的列中不会包含这些行的数据

00:01:49.180 --> 00:01:52.315
我们之后会进一步探讨这意味着什么

00:01:52.314 --> 00:01:55.129
你可以看到 在连接之后

00:01:55.129 --> 00:01:59.500
最终的表格包含了 Inner Join 表格的行

00:01:59.500 --> 00:02:01.280
但同时底部列出了账户表格中

00:02:01.280 --> 00:02:05.375
没有与订单相匹配的行

00:02:05.375 --> 00:02:08.865
Left Join 和 Right Join 在某些情况是可以互换的

00:02:08.865 --> 00:02:12.600
如果我们更改此次查询 把账户表格放在 FROM 子句

00:02:12.599 --> 00:02:15.132
把订单表格放在 JOIN 子句

00:02:15.133 --> 00:02:18.300
那左表会显示额外几行内容

00:02:18.300 --> 00:02:20.465
现在我们运行 Left Join

00:02:20.465 --> 00:02:22.580
这样的结果与我们之前查询进行的 Right Join

00:02:22.580 --> 00:02:25.280
是完全一致的

00:02:25.280 --> 00:02:28.949
因为 Left 和 Right Join 是完全可以互换的

00:02:28.949 --> 00:02:32.094
接下来的课程中我们会使用 Left Join 作为例子

00:02:32.094 --> 00:02:34.639
通常来说 这是世界通用的标准选择

00:02:34.639 --> 00:02:37.779
很少会看到使用 Right Join 的

00:02:37.780 --> 00:02:39.935
这样才能比较轻松地阅读其他人的查询

00:02:39.935 --> 00:02:43.069
快速了解他们想要完成什么任务

00:02:43.069 --> 00:02:48.049
如果你使用多个 JOIN 编写一个查询 要尤其注意保证使用 JOIN 时的一致性

00:02:48.050 --> 00:02:50.260
现在我们还达不到这个阶段 但很快就可以了

