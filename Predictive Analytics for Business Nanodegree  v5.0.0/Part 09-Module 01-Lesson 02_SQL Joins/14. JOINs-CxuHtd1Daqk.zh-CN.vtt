WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.189
在接下来的例子中

00:00:02.189 --> 00:00:07.679
我会用到这里列出的账户和订单表格中的子集

00:00:07.679 --> 00:00:10.994
首先 让我们来快速回顾下 INNER JOIN

00:00:10.994 --> 00:00:14.479
这只会返回两个表格中都有的行

00:00:14.480 --> 00:00:19.649
编写下述 INNER JOIN 查询以连接账户和订单

00:00:19.649 --> 00:00:25.244
这样可以提取出账户表格中的这些列以及订单表格中的这些列

00:00:25.245 --> 00:00:28.640
只要订单表格中的 account_id 字段

00:00:28.640 --> 00:00:33.359
能匹配上账户表格中的 id 字段

00:00:33.359 --> 00:00:35.570
这会将账户表格中的这三行提取出来

00:00:35.570 --> 00:00:40.320
与订单表格中的这五行匹配起来

00:00:40.320 --> 00:00:43.869
所以我们得到的表格是这样的

00:00:43.869 --> 00:00:48.839
注意两个表格中共有的账户 ID 只有三个

00:00:48.840 --> 00:00:53.710
一般将不同 JOIN 可视化的方法是使用 Venn Diagram (维恩图)

00:00:53.710 --> 00:00:56.649
图中的每个圆圈都代表一张表格

00:00:56.649 --> 00:01:00.924
左边的圆圈包括 FROM 子句中的表格的所有行数据

00:01:00.924 --> 00:01:02.909
即订单表格

00:01:02.909 --> 00:01:08.769
右边的圆圈代表 JOIN 子句中的表格的所有行数据

00:01:08.769 --> 00:01:11.444
这里是账户表格

00:01:11.444 --> 00:01:17.524
中间重叠的部分代表满足 ON 子句的所有行

00:01:17.525 --> 00:01:20.415
如这里所示 INNER JOIN

00:01:20.415 --> 00:01:25.440
只会返回两个圆圈交叉部分的行

00:01:25.439 --> 00:01:28.664
那这些还没有下达订单的新账户呢？

00:01:28.665 --> 00:01:30.750
如果我们想要表示

00:01:30.750 --> 00:01:32.534
订单表格中未出现的已有账户

00:01:32.534 --> 00:01:34.560
INNER JOIN 就帮不上忙了

00:01:34.560 --> 00:01:36.120
接下来

00:01:36.120 --> 00:01:38.590
我们将通过 OUTER JOIN 来提取这种类型的信息

