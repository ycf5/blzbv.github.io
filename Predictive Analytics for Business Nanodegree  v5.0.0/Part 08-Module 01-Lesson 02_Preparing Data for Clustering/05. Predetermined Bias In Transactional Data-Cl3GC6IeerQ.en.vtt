WEBVTT
Kind: captions
Language: en

00:00:00.380 --> 00:00:03.270
When building clustering models,
you should be aware of

00:00:03.270 --> 00:00:07.310
the impact of predetermined
bias in certain types of data.

00:00:07.309 --> 00:00:10.859
Predetermined biased is when
a historical data set shows certain

00:00:10.859 --> 00:00:13.649
results because of how
the business was run

00:00:13.650 --> 00:00:16.519
over the time that
the data was collected.

00:00:16.519 --> 00:00:19.980
And because of that,
an inherent bias may be present and

00:00:19.980 --> 00:00:22.399
affect how the objects are clustered.

00:00:22.399 --> 00:00:23.509
Think about it.

00:00:23.510 --> 00:00:28.340
Naturally, a store can only sell
whatever product it has allocated.

00:00:28.339 --> 00:00:33.289
If product category sales is used as
part of the data to determine clusters,

00:00:33.289 --> 00:00:37.990
stores could be forced into certain
segments because they were either given

00:00:37.990 --> 00:00:41.469
or not given a specific
product category.

00:00:41.469 --> 00:00:46.149
For example, pretend a particular store
has not sold high end merchandise,

00:00:46.149 --> 00:00:50.710
because prior systems never allocated
that merchandise to the store.

00:00:50.710 --> 00:00:55.109
Any clustering method that uses
historical product sales as data

00:00:55.109 --> 00:00:59.619
will bias against putting this store
in a segment that would receive

00:00:59.619 --> 00:01:01.669
high end merchandise.

00:01:01.670 --> 00:01:05.129
This could happen even though the
demographics for the area, around that

00:01:05.129 --> 00:01:10.320
store, would indicate a good potential
for selling high end merchandise.

00:01:10.319 --> 00:01:12.309
When you think this might be the case,

00:01:12.310 --> 00:01:16.230
it might make sense to rely more
on demographic and social data for

00:01:16.230 --> 00:01:19.780
the initial pass of
determining the segments.

00:01:19.780 --> 00:01:24.239
Leave out the historical sales data
from the first clustering analyses and

00:01:24.239 --> 00:01:25.859
see how the segments form.

00:01:27.030 --> 00:01:29.540
Then you compare the historical
category sales for

00:01:29.540 --> 00:01:32.250
each of the stores within
the same segments.

00:01:32.250 --> 00:01:34.290
If there's a significant difference,

00:01:34.290 --> 00:01:37.980
you would want to try to
determine what the cause could be.

00:01:37.980 --> 00:01:42.000
At that point, you might discover that
it's because that category has not been

00:01:42.000 --> 00:01:45.879
fully allocated to the under
performing stores.

00:01:45.879 --> 00:01:49.319
And if it's consistent across
the segments, you might actually want to

00:01:49.319 --> 00:01:53.039
reconsider how much you rely
on the historical data for

00:01:53.040 --> 00:01:54.139
your clustering solution.

00:01:55.450 --> 00:01:58.540
This situation can occur for
a number of reasons.

00:01:58.540 --> 00:02:01.690
Typically, the bias is
introduced by a process

00:02:01.689 --> 00:02:05.340
based on a previously
inaccurate allocation method.

00:02:05.340 --> 00:02:08.759
Or because a category manager
had made a decision for

00:02:08.758 --> 00:02:13.319
some reason to just not sell
certain products in certain stores.

00:02:13.319 --> 00:02:16.829
&gt;From my experience,
convincing that product manager

00:02:16.830 --> 00:02:19.480
to change how they look
at product allocation for

00:02:19.479 --> 00:02:24.129
these stores becomes much easier
when they see the rationale

00:02:24.129 --> 00:02:30.069
behind a segmentation that is based on
actual demographic and social data.

00:02:30.069 --> 00:02:34.250
Suggesting an approach to test
the validity of the new segmentation,

00:02:34.250 --> 00:02:39.509
by only changing the allocation in small
set of the under performing stores,

00:02:39.509 --> 00:02:42.829
can help make the transition
more acceptable.

00:02:42.830 --> 00:02:47.620
You can then check if sales patterns
change over a set period of time.

00:02:47.620 --> 00:02:52.539
This way, the business risk is not as
great, but you provide the opportunity

00:02:52.539 --> 00:02:55.560
for better revenue if
the segmentation is confirmed.

00:02:56.889 --> 00:02:59.079
You could use the method
known as AB testing for

00:02:59.080 --> 00:03:02.440
this kind of process,
which was taught in a separate course.

