WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:05.390
So we run the model and reduced much
of the unnecessary predictor variables.

00:00:05.390 --> 00:00:10.160
Now let's test how this model
performs with an independent sample.

00:00:10.160 --> 00:00:13.170
This will be the validation data set.

00:00:13.170 --> 00:00:16.650
To do this, Alteryx has a great
tool found in the gallery

00:00:16.650 --> 00:00:19.100
called the model comparison tool.

00:00:19.100 --> 00:00:24.410
This allows users to validate models and
compare models against each other.

00:00:24.410 --> 00:00:27.705
Check out the instructor notes on how
to add this to your tool palette.

00:00:28.910 --> 00:00:33.530
So what we're going to start with,
is our full built out stepwise model.

00:00:33.530 --> 00:00:36.100
I'm now going to bring in that
model comparison tool, and

00:00:36.100 --> 00:00:37.928
show you how to use it.

00:00:37.928 --> 00:00:42.550
In the m input side, we throw in the
model object that we want to validate.

00:00:42.550 --> 00:00:44.980
So the model object
from the stepwise tool,

00:00:44.980 --> 00:00:47.519
goes into this m model comparison input.

00:00:49.070 --> 00:00:53.560
The other side is the d side, this is
going to be our validation data set.

00:00:53.560 --> 00:00:56.830
So I'm going to grab the v from
the create samples tool and

00:00:56.830 --> 00:00:59.780
plug that into the model
comparison tool.

00:00:59.780 --> 00:01:03.750
Now the only thing we need to configure
with this model comparison tool is,

00:01:03.750 --> 00:01:06.070
what is the positive target class?

00:01:06.070 --> 00:01:10.790
Meaning, do we want yeses or
nos to be positive association or

00:01:10.790 --> 00:01:14.340
trues or falses or ones and zeros?

00:01:14.340 --> 00:01:17.940
And just know I'm going to use yeses for
this result.

00:01:17.940 --> 00:01:20.380
As you can see,
we have three different outputs, but

00:01:20.380 --> 00:01:23.860
I'm only going to look at this
R output which is the report.

00:01:23.860 --> 00:01:27.701
So there's many different results that
come outside of this model comparison

00:01:27.701 --> 00:01:28.300
report.

00:01:28.300 --> 00:01:32.020
The first thing is the fit and
error measures.

00:01:32.020 --> 00:01:34.770
This tells us the overall accuracy

00:01:34.770 --> 00:01:39.410
as well as the accuracy of predicting
nos as compared to predicting yeses, and

00:01:39.410 --> 00:01:42.805
some other different variables that we
don't really need to go into too much,

00:01:42.805 --> 00:01:46.140
yet their definitions
are found right below.

00:01:46.140 --> 00:01:51.060
As we can see, the validation data set
was predicted quite well by this model,

00:01:51.060 --> 00:01:54.010
and overall accuracy was at 91%.

00:01:54.010 --> 00:01:57.975
The nos were predicted
quite high at 92%, yet

00:01:57.975 --> 00:02:04.180
the yeses were a little bit tougher to
predict, it says, at only 83% accuracy.

00:02:05.550 --> 00:02:10.460
This next result is the confusion
matrix which shows us of the nos,

00:02:10.460 --> 00:02:14.870
how many were actually predicted
correctly as compared to the yeses.

00:02:14.870 --> 00:02:20.430
As you can see, we have 504 records that
were predicted no that were actually no.

00:02:20.430 --> 00:02:26.000
Yet we had 45 records that were
predicted no that were actually yeses.

00:02:26.000 --> 00:02:28.689
This result shows a pretty
good representation

00:02:28.689 --> 00:02:30.570
of where biases may occur.

00:02:30.570 --> 00:02:33.496
Do we have way more nos that
were predicted yeses, or

00:02:33.496 --> 00:02:35.768
way more yeses that were predicted nos?

00:02:35.768 --> 00:02:39.679
And lastly, we have some different
diagnostic plots at the bottom that

00:02:39.679 --> 00:02:41.890
we'll go more into later.

00:02:41.890 --> 00:02:46.088
But judging based off of just this
confusion matrix and the fit and

00:02:46.088 --> 00:02:49.534
error measures,
I think this model is quite strong.

00:02:49.534 --> 00:02:53.614
But before we get ahead of ourselves,
I'm going to test this model out against

00:02:53.614 --> 00:02:56.240
our other models that we're
going to create next.

