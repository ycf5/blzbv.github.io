WEBVTT
Kind: captions
Language: pt-BR

00:00:00.000 --> 00:00:04.033
Mas antes de ver os resultados,
eu quero detalhar mais

00:00:04.067 --> 00:00:08.634
o que a PCA faz,
e como trabalhar com os resultados.

00:00:08.667 --> 00:00:13.501
Não vou entrar na matemática,
pois pode ficar muito técnico,

00:00:13.534 --> 00:00:16.501
e vai além
do que quero que entendam.

00:00:16.534 --> 00:00:20.300
Mas vou lhes mostrar um exemplo
relativamente básico

00:00:20.334 --> 00:00:24.000
para que entendam o conceito
por trás do processo.

00:00:24.033 --> 00:00:27.667
Se querem ir fundo na matemática
e nos algoritmos por trás,

00:00:27.701 --> 00:00:31.300
podem achar recursos
nas notas de aula.

00:00:31.334 --> 00:00:34.367
O jeito mais fácil de visualizar
o que a PCA faz

00:00:34.400 --> 00:00:37.734
é mostrar como ela funciona
com apenas duas variáveis.

00:00:37.767 --> 00:00:42.434
Como eu disse, a PCA capta
toda a variância dos dados.

00:00:42.467 --> 00:00:45.868
Para quantas variáveis
você combinar com a PCA,

00:00:45.901 --> 00:00:48.901
você geralmente terá
um componente principal.

00:00:48.934 --> 00:00:52.100
Para o 1º componente,
ela calculará uma linha

00:00:52.133 --> 00:00:55.033
que representa
o melhor ajuste para os dados

00:00:55.067 --> 00:00:58.567
que captará o máximo
de variância possível.

00:00:58.601 --> 00:01:02.567
Chamemos isto
de linha componente.

00:01:02.601 --> 00:01:06.267
Digamos que esta primeira linha
capte 70% da variância.

00:01:06.300 --> 00:01:09.634
Para o 2º componente,
outra linha será calculada

00:01:09.667 --> 00:01:13.534
representando o melhor ajuste
para a variância restante

00:01:13.567 --> 00:01:16.901
que não foi captada
pelo 1º componente.

00:01:16.934 --> 00:01:20.033
Como a variância restante
não deve ter correlação

00:01:20.067 --> 00:01:23.968
com a variância original captada,
pela natureza dos cálculos,

00:01:24.000 --> 00:01:29.067
isto faz um ângulo reto,
é ortogonal à 1ª linha.

00:01:29.100 --> 00:01:32.901
Digamos que a 2ª linha
capte mais 20% da variância.

00:01:32.934 --> 00:01:36.834
Isso deixa 10%
que ainda precisa ser explicado.

00:01:36.868 --> 00:01:39.400
Fica mais difícil
representar visualmente,

00:01:39.434 --> 00:01:43.801
mas se você tiver uma 3º variável,
estará lidando com 3 dimensões,

00:01:43.834 --> 00:01:48.234
e essa linha pode ser calculada
em um plano diferente.

00:01:48.267 --> 00:01:51.334
Isto continua para
quantas variáveis você tiver

00:01:51.367 --> 00:01:53.567
nos dados
que está combinando.

00:01:53.601 --> 00:01:56.167
Por exemplo, nos nossos
dados de temperatura,

00:01:56.200 --> 00:01:58.434
onde há 12 meses de dados,

00:01:58.467 --> 00:02:01.834
tipicamente terminaríamos
com 12 componentes.

00:02:01.868 --> 00:02:05.033
Acontece que
com cada componente calculado,

00:02:05.067 --> 00:02:09.200
há cada vez menos variância
que já não tenha sido captada.

00:02:09.234 --> 00:02:13.300
Assim, a importância dos componentes
finais se torna mínima.

00:02:13.334 --> 00:02:17.434
A chave para reduzir as variáveis,
o objetivo da PCA,

00:02:17.467 --> 00:02:21.601
é determinar em que ponto
do conjunto de componentes criado

00:02:21.634 --> 00:02:24.133
há suficiente
variância captada,

00:02:24.167 --> 00:02:26.968
e você não precisa
considerar mais nenhum.

00:02:27.000 --> 00:02:31.100
Para cada componente, você tem
um valor designado a cada objeto,

00:02:31.133 --> 00:02:33.033
ou um registro
nos seus dados.

00:02:33.067 --> 00:02:38.033
É basicamente onde esse registro
específico das variáveis combinadas

00:02:38.067 --> 00:02:40.901
cai naquela
linha componente.

00:02:40.934 --> 00:02:45.133
Para cada componente, você também
tem algo chamado carregamentos,

00:02:45.167 --> 00:02:50.701
que mostra o efeito de cada variável
naquele componente.

00:02:50.734 --> 00:02:55.200
Com os carregamentos, o sinal
do valor não é muito importante.

00:02:55.234 --> 00:02:59.100
O tamanho do valor
importa mais.

00:02:59.133 --> 00:03:03.267
Assim, um carregamento próximo a 0
para uma variável específica,

00:03:03.300 --> 00:03:06.334
tem pouco efeito
naquele componente específico.

00:03:06.367 --> 00:03:10.767
Agora que cobri
alguns pré-requisitos,

00:03:10.801 --> 00:03:15.200
vamos ver como isto acontece
com nossos dados, e seus resultados,

00:03:15.234 --> 00:03:17.667
e entender
por que queremos usá-los.

