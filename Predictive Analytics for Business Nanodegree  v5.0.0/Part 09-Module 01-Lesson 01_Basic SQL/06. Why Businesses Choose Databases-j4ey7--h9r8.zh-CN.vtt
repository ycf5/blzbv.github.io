WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.589
为了日后使用 几乎所有应用都需要先存储数据

00:00:04.589 --> 00:00:06.790
以 Twitter 为例

00:00:06.790 --> 00:00:08.445
每次我写下一条推文

00:00:08.445 --> 00:00:13.740
这条推文的文本就需要存储到某个地方 这样才能让我所有的粉丝看到

00:00:13.740 --> 00:00:16.155
Twitter 存储了大量关于我推文的信息

00:00:16.155 --> 00:00:17.589
作者是谁？

00:00:17.589 --> 00:00:19.469
我 我写下推文的时间

00:00:19.469 --> 00:00:24.379
如果我是在回复或是在转发 那么所有相关的推文链接也会被储存起来

00:00:24.379 --> 00:00:29.814
这些信息会用于决定谁能看到我的推文以及他们看到推文的时间

00:00:29.815 --> 00:00:31.920
这就是数据库提供的功能

00:00:31.920 --> 00:00:35.093
数据库储存信息 以便之后访问

00:00:35.093 --> 00:00:40.090
而 SQL 这门语言则允许分析师及其他人访问这些信息

00:00:40.090 --> 00:00:43.330
数据库有大量属性可以很好地完成这个任务

00:00:43.329 --> 00:00:47.489
最重要的是 数据库做了很多工作来检查数据完整性

00:00:47.490 --> 00:00:50.245
确保录入的数据是符合条件的

00:00:50.244 --> 00:00:53.759
比如 如果你在储存某个人有多少个孩子

00:00:53.759 --> 00:00:56.739
数据库就可以强行规定只有整数可用

00:00:56.740 --> 00:00:58.545
因为你不可能有半个孩子

00:00:58.545 --> 00:01:00.899
数据库运行也很快

00:01:00.899 --> 00:01:03.054
能够在十分庞大的数据集之间进行十分快速的操作

00:01:03.054 --> 00:01:06.349
如果对数据库进行优化 其速度还能更上一层楼

00:01:06.349 --> 00:01:08.304
数据库是共享的实体

00:01:08.305 --> 00:01:11.210
许多人可以同时访问同一数据库

00:01:11.209 --> 00:01:14.534
更重要的是 这些人处理的数据还可以是同一个

00:01:14.534 --> 00:01:19.109
为了让这种操作更加便捷 数据库还配备了许多管理特征 如访问控制

