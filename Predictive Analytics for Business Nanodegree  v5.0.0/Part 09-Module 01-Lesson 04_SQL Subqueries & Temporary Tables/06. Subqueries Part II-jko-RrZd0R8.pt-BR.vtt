WEBVTT
Kind: captions
Language: pt-BR

00:00:00.302 --> 00:00:02.433
As subconsultas podem ser
usadas em vários lugares

00:00:02.467 --> 00:00:03.633
dentro de uma consulta.

00:00:04.067 --> 00:00:06.967
Pode ser em qualquer lugar
onde use um nome de tabela,

00:00:07.001 --> 00:00:09.700
um nome de coluna
ou um valor individual.

00:00:10.733 --> 00:00:12.867
Elas são muito úteis
na lógica condicional,

00:00:13.567 --> 00:00:15.933
junto com as cláusulas
"where" e "join",

00:00:16.233 --> 00:00:18.533
ou na parte "when"
de uma instrução de caso.

00:00:18.733 --> 00:00:19.833
Por exemplo,

00:00:19.867 --> 00:00:21.867
você pode querer retornar
apenas pedidos

00:00:21.901 --> 00:00:23.233
que ocorreram no mesmo mês

00:00:23.267 --> 00:00:25.533
que a Parch &amp; Posey
fez seu primeiro pedido.

00:00:26.233 --> 00:00:27.933
Para obter a data
do primeiro pedido,

00:00:27.967 --> 00:00:30.433
você pode escrever uma subconsulta
com uma função "min".

00:00:31.500 --> 00:00:34.167
Vamos adicionar a função
"Date_trunc" para obter o mês.

00:00:48.433 --> 00:00:50.633
Por fim, vamos escrever
uma consulta externa

00:00:50.667 --> 00:00:52.600
que use isso para filtrar
a tabela de pedidos

00:00:52.634 --> 00:00:54.767
e que classifique
pela coluna "ocurred_at".

00:01:35.733 --> 00:01:37.467
Você pode ver
que todos esses pedidos

00:01:37.501 --> 00:01:41.500
ocorreram em dezembro de 2013,
o mesmo mês do primeiro pedido.

00:01:41.534 --> 00:01:42.800
Essa consulta funciona

00:01:42.834 --> 00:01:45.967
porque o resultado da subconsulta
é apenas uma célula.

00:01:46.600 --> 00:01:48.900
A lógica condicional
funcionará com subconsultas

00:01:48.934 --> 00:01:50.767
que contenham
os resultados de uma célula.

00:01:50.801 --> 00:01:54.000
Mas "in" é o único tipo
de lógica condicional que funcionará

00:01:54.034 --> 00:01:56.467
quando a consulta interna
contiver resultados múltiplos.

