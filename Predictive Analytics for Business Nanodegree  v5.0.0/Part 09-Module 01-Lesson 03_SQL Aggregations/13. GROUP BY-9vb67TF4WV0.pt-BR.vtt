WEBVTT
Kind: captions
Language: pt-BR

00:00:01.267 --> 00:00:05.400
Até agora, aplicamos as funções
agregadoras por toda uma tabela.

00:00:05.434 --> 00:00:07.601
Você agora sabe contar
todos os registros

00:00:07.634 --> 00:00:09.434
de uma determinada tabela.

00:00:09.467 --> 00:00:11.667
Mas você pode querer
contar registros

00:00:11.701 --> 00:00:13.734
em subconjuntos múltiplos
de dados.

00:00:13.767 --> 00:00:16.701
Por exemplo, como gerente de vendas,
você pode querer somar

00:00:16.734 --> 00:00:18.801
todas as vendas
de cada tipo de papel

00:00:18.834 --> 00:00:21.133
para cada conta.

00:00:21.167 --> 00:00:24.200
"Group by" permite que você crie
segmentos que serão agregados

00:00:24.267 --> 00:00:26.133
independentemente
um do outro.

00:00:26.167 --> 00:00:27.701
Em outras palavras,
"group by"

00:00:27.734 --> 00:00:31.667
permite que você pegue a soma
dos dados limitada a cada conta

00:00:31.701 --> 00:00:34.467
em vez de todo
o conjunto de dados.

00:00:34.501 --> 00:00:37.033
Vamos buscar essa resposta
começando com as somas

00:00:37.067 --> 00:00:40.200
das quantidades
de cada tipo de papel.

00:00:41.634 --> 00:00:44.234
Agora queremos criar um conjunto
separado de somas

00:00:44.267 --> 00:00:45.567
para cada ID de conta,

00:00:45.601 --> 00:00:47.767
então vamos adicionar
a coluna "ID de contas"

00:00:47.801 --> 00:00:49.534
à nossa declaração "select".

00:00:50.267 --> 00:00:52.567
Como vê,
isso resulta em um erro.

00:00:53.467 --> 00:00:56.133
Conforme agregamos a essa consulta,
estamos apagando

00:00:56.167 --> 00:00:58.267
o número devolvido
de linhas.

00:00:58.834 --> 00:01:02.901
Na anterior, apagamos tudo,
até sobrar uma única linha.

00:01:02.934 --> 00:01:07.534
A razão para esse erro é que
incluímos a coluna de ID de contas,

00:01:07.567 --> 00:01:11.934
mas essa coluna não foi apagada
como aquelas que foram agregadas.

00:01:11.968 --> 00:01:15.634
A consulta não sabe se é preciso
também somar o ID de contas

00:01:15.667 --> 00:01:18.167
ou torná-lo um agrupamento.

00:01:18.200 --> 00:01:20.667
Temos que ser explícitos
a esse respeito.

00:01:21.567 --> 00:01:24.767
Queremos dizer à consulta
para agregar em segmentos,

00:01:24.801 --> 00:01:28.667
no qual cada segmento é um valor
da coluna de ID de contas.

00:01:28.701 --> 00:01:31.434
Fazemos isso usando
a cláusula "group by".

00:01:37.901 --> 00:01:41.634
Essa ordem não é intuitiva,
então vamos ajustá-la.

00:01:41.667 --> 00:01:43.968
A cláusula "group by"
sempre é um intermediário

00:01:44.000 --> 00:01:48.234
entre as cláusulas "where",
se houver, e a cláusula "order by".

00:01:53.634 --> 00:01:56.067
Sempre que houver um campo
na declaração "select"

00:01:56.100 --> 00:01:58.868
que não seja agregado,
a consulta espera que ele esteja

00:01:58.934 --> 00:02:00.634
na cláusula "group by".

00:02:00.734 --> 00:02:03.567
Uma coluna não agregada
e que não está em "group by"

00:02:03.634 --> 00:02:06.033
vai gerar de novo o erro
que vimos antes.

00:02:06.067 --> 00:02:09.033
Isso é muito importante e vital
para o uso correto

00:02:09.067 --> 00:02:11.033
das declarações "group by".

00:02:11.067 --> 00:02:13.400
De novo, você sempre deve ver
quaisquer colunas

00:02:13.434 --> 00:02:16.133
na declaração "select"
que não estejam sendo agregadas

00:02:16.167 --> 00:02:17.601
na declaração "group by".

