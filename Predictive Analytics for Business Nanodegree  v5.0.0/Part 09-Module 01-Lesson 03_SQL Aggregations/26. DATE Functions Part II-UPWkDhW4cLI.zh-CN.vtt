WEBVTT
Kind: captions
Language: zh-CN

00:00:00.300 --> 00:00:02.710
要按天分组

00:00:02.710 --> 00:00:06.355
我们需要将 2017-04-01 的所有时间调整为

00:00:06.355 --> 00:00:14.875
2017-04-01 00:00:00 这种格式

00:00:14.875 --> 00:00:18.039
这样 用按天分组的方法

00:00:18.039 --> 00:00:20.530
我们就能获得在 4 月 1 日这一天当中的每小时

00:00:20.530 --> 00:00:22.375
每分钟及每秒钟内出现的事件

00:00:22.375 --> 00:00:26.905
将所有事件分在同一组

00:00:26.905 --> 00:00:30.974
这可以通过 DATE_TRUNC (日期截断) 函数来完成

00:00:30.975 --> 00:00:35.429
我们先试着不做任何截断 对 occurred_at 列进行分组

00:00:35.429 --> 00:00:39.494
可以看到 这对我们一点帮助都没有

00:00:39.494 --> 00:00:43.474
如果将 occurred_at 列中的每一个实例 替换为截断后的版本

00:00:43.475 --> 00:00:53.875
我们会得到一个结果集 即标准纸数量的每日总和

00:00:53.875 --> 00:00:56.369
重要的是 GROUP BY 后的指标要包含在

00:00:56.369 --> 00:00:59.634
SELECT 语句中 以确保结果的一致性

00:00:59.634 --> 00:01:02.219
在某些数据库中 可能出现在 GROUP BY 语句中按年为单位进行分组

00:01:02.219 --> 00:01:06.174
但在 SELECT 语句中以天为单位进行截断

00:01:06.174 --> 00:01:09.689
这种情况大多是意外出现的

00:01:09.689 --> 00:01:14.909
因为结果会让人困惑 而且基本上无法给出你想要的答案

00:01:14.909 --> 00:01:17.670
要确保分组正确 最简单的方法是

00:01:17.670 --> 00:01:20.780
使用列数 而不是重新输入具体函数

00:01:20.780 --> 00:01:26.230
DATE_TRUNC 可用于聚合小单位 比如秒

00:01:26.230 --> 00:01:28.019
如果你处理服务器日志

00:01:28.019 --> 00:01:30.704
或者指定的一秒中发生的事件 DATE_TRUNC 或许能帮到你

00:01:30.704 --> 00:01:32.230
而大部分时间内

00:01:32.230 --> 00:01:34.405
你会从业务角度

00:01:34.405 --> 00:01:36.734
用它进行某个时间段的聚合

00:01:36.734 --> 00:01:39.344
每天 每周 每月 每季度以及每年

00:01:39.344 --> 00:01:42.094
现在 我们能看到不同的截断

00:01:42.094 --> 00:01:45.495
如果我们月份或日期是 01

00:01:45.495 --> 00:01:47.939
可以看到 这些值并没有任何变化

00:01:47.939 --> 00:01:54.799
有些情况下 你可能会想从一天中拉取指定部分

00:01:54.799 --> 00:01:57.189
例如 如果你想知道

00:01:57.189 --> 00:01:59.739
Parch &amp; Posey 网站周几流量最大

00:01:59.739 --> 00:02:01.629
你不会想使用 DATE_TRUNC

00:02:01.629 --> 00:02:03.229
要想知道是周几

00:02:03.230 --> 00:02:05.219
你得用到 DATE_PART

00:02:05.219 --> 00:02:09.354
通过 DATE_PART 你能提取出最感兴趣的那部分日期

00:02:09.354 --> 00:02:11.780
但应注意 由于忽略了年份

00:02:11.780 --> 00:02:16.289
DATE_PART 针对 2016 年 4 月和 2017 年 4 月发生的事件会返回相同的月份

00:02:16.289 --> 00:02:21.444
而 DATE_TRUNC 会对两者进行区分

00:02:21.444 --> 00:02:24.299
用 Parch &amp; Posey 的数据举例

00:02:24.300 --> 00:02:26.840
周几的销售量最高？

00:02:26.840 --> 00:02:29.280
我们先从区分出每周的每一天开始着手

00:02:29.280 --> 00:02:34.860
DOW (Day of Week) 是指一周内的某天 会返回一个从 0 到 6 的值

00:02:34.860 --> 00:02:37.890
0 代表周日 6 代表周六

00:02:37.889 --> 00:02:39.539
现在可以得出这个列

00:02:39.539 --> 00:02:43.894
我们可以通过聚合得出纸量销售量最大的日期

00:02:43.895 --> 00:02:47.250
我们可以对总数进行降序排列

00:02:47.250 --> 00:02:52.280
这样 销售量最高的那天就会在结果集的最顶端

00:02:57.889 --> 00:03:01.449
看起来 销售量最高的是周日

00:03:01.449 --> 00:03:04.319
而最低的那天是周四

