WEBVTT
Kind: captions
Language: pt-BR

00:00:00.567 --> 00:00:03.367
Agora você já deve ter notado
que é é um pouco difícil

00:00:03.400 --> 00:00:04.834
trabalhar com datas.

00:00:04.868 --> 00:00:06.934
Agregar por campos de data,
em particular,

00:00:06.968 --> 00:00:08.634
não funciona
de maneira prática,

00:00:08.701 --> 00:00:11.033
pois trata carimbos
de data e hora como únicos,

00:00:11.067 --> 00:00:12.901
quando seria
mais prático arredondar

00:00:12.934 --> 00:00:15.234
para o dia, semana ou mês
mais próximos,

00:00:15.300 --> 00:00:17.267
agregando por esse período.

00:00:17.300 --> 00:00:20.133
Veja, por exemplo, a soma
de quantidades de papel padrão

00:00:20.167 --> 00:00:22.000
por período de tempo.

00:00:22.033 --> 00:00:25.267
Você pode ver nos resultados aqui
que isso não é mais útil

00:00:25.300 --> 00:00:27.400
do que olhar
os dados brutos.

00:00:27.434 --> 00:00:32.067
A agregação passa de 6.912 linhas
nos dados brutos

00:00:32.100 --> 00:00:34.200
para 6.908.

00:00:34.868 --> 00:00:37.834
Quase todas as datas nessa tabela
são únicas.

00:00:37.868 --> 00:00:40.734
Mas boas notícias: há muitas
funções especiais

00:00:40.767 --> 00:00:42.701
para facilitar o trabalho
com datas.

00:00:42.767 --> 00:00:45.534
Mas antes de irmos mais fundo
em funções de data e tempo,

00:00:45.567 --> 00:00:47.701
vamos ver como datas
são armazenadas.

00:00:47.734 --> 00:00:51.133
Se você vive nos EUA,
está acostumado a ver datas

00:00:51.167 --> 00:00:55.634
no formato mês-dia-ano,

00:00:55.667 --> 00:00:58.834
ou algum formato similar
em que o mês apareça primeiro.

00:00:58.868 --> 00:01:02.033
É diferente em comparação
aos padrões do resto do mundo.

00:01:02.067 --> 00:01:05.801
Veja no link no guia abaixo
que a maioria dos países do mundo

00:01:05.834 --> 00:01:10.267
segue o formato dia-mês-ano.

00:01:11.367 --> 00:01:14.968
Isso não é necessariamente
melhor ou pior, é só diferente.

00:01:16.133 --> 00:01:18.601
Bancos de dados
têm outra prática:

00:01:18.634 --> 00:01:22.934
ordenar a partir do componente
menos preciso da data, o ano,

00:01:22.968 --> 00:01:24.968
depois mês e dia.

00:01:26.434 --> 00:01:28.534
Essa é uma utilidade
bem específica,

00:01:28.567 --> 00:01:31.234
na qual a data, além de separada
por ordem alfabética,

00:01:31.267 --> 00:01:33.033
também está
em ordem cronológica.

00:01:33.067 --> 00:01:35.234
Então a ordenação
de datas é a mesma

00:01:35.267 --> 00:01:38.234
quando se pensa nelas
como números ou partes de texto.

00:01:39.200 --> 00:01:42.133
Com esse exemplo, podemos ver
que o modo de armazenamento

00:01:42.167 --> 00:01:44.167
dos bancos de dados
começando pelo ano

00:01:44.200 --> 00:01:45.434
é ideal para entender

00:01:45.467 --> 00:01:48.033
como vamos querer recuperar
tal informação no futuro,

00:01:48.067 --> 00:01:51.267
seja pelas informações
mais novas ou mais antigas.

00:01:51.300 --> 00:01:54.467
Formatos em que o dia e o mês
vêm antes fazem essa separação

00:01:54.501 --> 00:01:56.667
de formas um tanto
sem sentido.

00:01:57.534 --> 00:02:00.734
Outro benefício é que as datas
podem ser facilmente diminuídas

00:02:00.767 --> 00:02:03.467
para serem agrupadas
para análise.

00:02:03.501 --> 00:02:08.167
Pense na data 01/04/2017

00:02:08.934 --> 00:02:12.000
e no horário 12h15min01s.

00:02:12.033 --> 00:02:15.400
Se você quer agrupá-la com outros
eventos ocorridos no mesmo dia,

00:02:15.434 --> 00:02:18.167
não podemos fazer isso
com a data nesse formato.

00:02:18.200 --> 00:02:21.734
Agrupar agora ou por qualquer
evento ocorrido em 1° de abril

00:02:21.767 --> 00:02:26.667
às 12h15min01s
não nos ajuda muito.

