WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:03.210
To get a feel for how nulls work,

00:00:03.210 --> 00:00:05.850
let's pull a set of records from the accounts table with

00:00:05.850 --> 00:00:09.820
IDs that fall between 1500 and 1600.

00:00:10.770 --> 00:00:14.065
We can see that the primary POC,

00:00:14.065 --> 00:00:15.925
which stands for Point Of Contact,

00:00:15.925 --> 00:00:18.775
is blank for the Intel account.

00:00:18.775 --> 00:00:21.275
This could simply be an error in the data.

00:00:21.275 --> 00:00:24.740
Maybe a point of contact that was accidentally deleted at some point,

00:00:24.740 --> 00:00:27.580
or it could be that Parch and Posey's point of contact left

00:00:27.580 --> 00:00:31.590
the company and they don't yet have a new point of contact for that account.

00:00:31.590 --> 00:00:34.715
Either way, there is no data in this particular cell.

00:00:34.715 --> 00:00:36.645
This cell is null.

00:00:36.645 --> 00:00:39.460
Imagining yourself as a sales manager at Parch and Posey,

00:00:39.460 --> 00:00:43.885
you may want to know all of the accounts for which the primary POC is null.

00:00:43.885 --> 00:00:45.670
If you don't have a point of contact,

00:00:45.670 --> 00:00:49.555
chances are you're not going to be able to keep that customer for much longer.

00:00:49.555 --> 00:00:51.545
In order to find all these accounts,

00:00:51.545 --> 00:00:54.070
we'll have to use some special syntax in our WHERE clause.

00:00:54.070 --> 00:01:02.700
Turns out, there are quite a few accounts without points of contact.

00:01:02.700 --> 00:01:05.565
So, the special thing about nulls that you need to write

00:01:05.565 --> 00:01:13.825
IS NULL instead of EQUALS NULL.

00:01:13.825 --> 00:01:16.755
The reason this doesn't work is that NULL is not a value,

00:01:16.755 --> 00:01:18.970
it's a property of the data.

00:01:18.970 --> 00:01:20.975
This is different from zero or a space,

00:01:20.975 --> 00:01:23.205
both of which are values.

00:01:23.205 --> 00:01:25.775
If you want to find the inverse of our previous result set,

00:01:25.775 --> 00:01:29.345
you can use this syntax, IS NOT NULL.

00:01:29.345 --> 00:01:36.430
As you can see, this returns all rows for which there are values in the primary POC.

