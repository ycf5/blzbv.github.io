WEBVTT
Kind: captions
Language: en

00:00:00.300 --> 00:00:02.710
In order to group by day,

00:00:02.710 --> 00:00:06.355
we'll need to adjust all the times on April 1st 2017

00:00:06.355 --> 00:00:14.875
to read: 2017-04-01 00:00:00.

00:00:14.875 --> 00:00:18.039
That way when we group by date,

00:00:18.039 --> 00:00:20.530
we get every event that occurred for all hours,

00:00:20.530 --> 00:00:22.375
minutes, and seconds of April 1st.

00:00:22.375 --> 00:00:26.905
They'll all be grouped together into the same grouping.

00:00:26.905 --> 00:00:30.974
We can do this using the date trunc function.

00:00:30.975 --> 00:00:35.429
Let's start by grouping by occurred at without any truncation.

00:00:35.429 --> 00:00:39.494
As you can see, this doesn't help us much at all.

00:00:39.494 --> 00:00:43.474
If we replace each instance of occurred at with a truncated version,

00:00:43.475 --> 00:00:53.875
we'll get a result set that sums the quantities of standard paper by day.

00:00:53.875 --> 00:00:56.369
It's important to group by the same metric that's included in

00:00:56.369 --> 00:00:59.634
the select statement to assure your results are consistent.

00:00:59.634 --> 00:01:02.219
In some databases, it's possible to group by

00:01:02.219 --> 00:01:06.174
a year but truncate on day in the select statement.

00:01:06.174 --> 00:01:09.689
This is something most people only do by accident as it provides results that are

00:01:09.689 --> 00:01:14.909
confusing and in many cases wrong for the type of question you're trying to answer.

00:01:14.909 --> 00:01:17.670
The easiest way to make sure you group correctly is to

00:01:17.670 --> 00:01:20.780
use column numbers instead of retyping the exact functions.

00:01:20.780 --> 00:01:26.230
Date trunc can be used to aggregate at very granular levels like second.

00:01:26.230 --> 00:01:28.019
That might be useful if you're working with

00:01:28.019 --> 00:01:30.704
server logs or many events happen in a given second.

00:01:30.704 --> 00:01:32.230
Most of the time though,

00:01:32.230 --> 00:01:34.405
you'll use this to aggregate at intervals that make

00:01:34.405 --> 00:01:36.734
sense from a business perspective: day,

00:01:36.734 --> 00:01:39.344
week, month, quarter, and year.

00:01:39.344 --> 00:01:42.094
Here, we can see different truncations.

00:01:42.094 --> 00:01:45.495
Notice that if our month or day are 01,

00:01:45.495 --> 00:01:47.939
there's no change made to these values, as you can see.

00:01:47.939 --> 00:01:54.799
There are some cases where you might want to just pull out a given part of the day.

00:01:54.799 --> 00:01:57.189
For example, if you want to know what day of

00:01:57.189 --> 00:01:59.739
the week Parch &amp; Posey's website sees the most traffic,

00:01:59.739 --> 00:02:01.629
you wouldn't want to use date trunc.

00:02:01.629 --> 00:02:03.229
To get the day of the week,

00:02:03.230 --> 00:02:05.219
you'd have to use date part.

00:02:05.219 --> 00:02:09.354
Date part allows you to pull the part of the date that you're interested in.

00:02:09.354 --> 00:02:11.780
But notice that regardless of year,

00:02:11.780 --> 00:02:16.289
a date part would provide the same month for an event that happens in April 2016 and

00:02:16.289 --> 00:02:21.444
April 2017 where a date trunc would differentiate these events.

00:02:21.444 --> 00:02:24.299
Let's explore this example using Parch &amp; Posey's data.

00:02:24.300 --> 00:02:26.840
On what day of the week are the most sales made?

00:02:26.840 --> 00:02:29.280
Let's start by figuring out the day of the week for each one.

00:02:29.280 --> 00:02:34.860
DOW stands for day of week and returns a value from zero to six,

00:02:34.860 --> 00:02:37.890
where zero is Sunday and six is Saturday.

00:02:37.889 --> 00:02:39.539
Now that we have this column,

00:02:39.539 --> 00:02:43.894
we can aggregate to figure out the day with the most reams of paper sold.

00:02:43.895 --> 00:02:47.250
We'll order it by the sum in descending order so that

00:02:47.250 --> 00:02:52.280
the day with the most sales will be at the top of the result set.

00:02:57.889 --> 00:03:01.449
Looks like the most paper was ordered on

00:03:01.449 --> 00:03:04.319
Sunday and the least paper was ordered on Thursday.

