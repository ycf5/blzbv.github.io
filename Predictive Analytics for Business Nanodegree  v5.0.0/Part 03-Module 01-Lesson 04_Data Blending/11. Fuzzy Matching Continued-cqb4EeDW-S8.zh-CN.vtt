WEBVTT
Kind: captions
Language: zh-CN

00:00:00.166 --> 00:00:03.703
我们在这里不会讲关于模糊匹配的具体细节

00:00:03.703 --> 00:00:08.379
但是你要理解模糊匹配是怎么操作的 模糊匹配在这些单词

00:00:08.379 --> 00:00:14.300
的相似性的基础上研究单词然后计算出匹配分数的接近程度

00:00:14.300 --> 00:00:17.250
你可以在视频下方的注释中看到在模糊匹配中

00:00:17.250 --> 00:00:21.530
两种最流行的算法的一些基本信息

00:00:22.870 --> 00:00:25.380
当我们对两个数据集进行模糊匹配的时候

00:00:25.380 --> 00:00:29.010
最好的方法是使用一种叫做瀑布的方法

00:00:29.010 --> 00:00:33.950
我们从最精准的匹配一直延续到最不精准的匹配

00:00:33.950 --> 00:00:37.171
我们要做的第一件事是把两个数据集连接起来

00:00:37.171 --> 00:00:41.430
分辨出可以被精准匹配的记录

00:00:41.430 --> 00:00:44.180
接着从混合数据中删除这些记录

00:00:44.180 --> 00:00:47.000
那么我们就可以在剩下的数据中进行模糊匹配

00:00:48.010 --> 00:00:52.950
我们需要选择出那些我们相信可以独特地区别出记录的字段

00:00:52.950 --> 00:00:56.000
例如字段first name 、last name 和address

00:00:57.690 --> 00:01:01.730
在可以被精准匹配的数据从整个数据集中被删除后

00:01:01.730 --> 00:01:07.370
接下来我们需要决定不同的模糊匹配的字段的组合

00:01:07.370 --> 00:01:10.690
例如 如果我们要处理客户数据

00:01:10.690 --> 00:01:16.370
我们可能会有他们的名字、姓氏、地址、城市、州、邮政区号、电话号码

00:01:16.370 --> 00:01:18.100
甚至是他们的邮件

00:01:18.100 --> 00:01:20.960
使用这些字段的不同组合 

00:01:20.960 --> 00:01:24.110
我们可以构建出模糊匹配的方法

00:01:24.110 --> 00:01:27.740
例如 我们可能要使用

00:01:27.740 --> 00:01:30.430
字段last name 、address 和zip code
 
24
00:01:30,430 --&gt; 00:01:35,010
至于剩下的没有被匹配成功的记录 我们可能要试试first name
25
00:01:35,010 --&gt; 00:01:37,040
last name 和 phone number

00:01:37.040 --> 00:01:39.930
对于剩下的还是没有被匹配成功的记录

00:01:39.930 --> 00:01:43.200
可能我们会试试last name 和address.

00:01:43.200 --> 00:01:46.040
每次我们想要找到一些重复的信息

00:01:46.040 --> 00:01:49.290
用这种方法对它们进行编码 使其进行匹配

00:01:49.290 --> 00:01:55.100
然后从数据集中删除它们  直到我们用完了所有的匹配方法

00:01:55.100 --> 00:02:00.344
剩下的记录通常被认为是没有重复的

