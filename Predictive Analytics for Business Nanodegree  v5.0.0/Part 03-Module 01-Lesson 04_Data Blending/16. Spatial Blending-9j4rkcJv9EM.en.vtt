WEBVTT
Kind: captions
Language: en

00:00:01.060 --> 00:00:04.910
Now that we understand that data
can have a spatial component to it,

00:00:04.910 --> 00:00:08.610
let's talk about data blending
two spatial data sets.

00:00:08.610 --> 00:00:13.130
We resort to joining data sets together
based on their spatial components

00:00:13.130 --> 00:00:16.860
when there aren't fields that can
be used to join them together.

00:00:16.860 --> 00:00:20.790
For instance, if we want to find
out which customers fall within

00:00:20.790 --> 00:00:24.650
a store's trade area,
there aren't really any fields

00:00:24.650 --> 00:00:27.990
that can be used to join
the customers to the trade area.

00:00:27.990 --> 00:00:30.920
So, we do what's called a spatial match.

00:00:30.920 --> 00:00:33.700
We use the spatial data
from the customers or

00:00:33.700 --> 00:00:37.900
their point locations to
see if they fall within or

00:00:37.900 --> 00:00:41.820
intersect the trade area polygon,
represented by the gray area.

00:00:43.000 --> 00:00:46.930
In this way, we can also append
fields from the store file

00:00:46.930 --> 00:00:49.390
onto the customer file,
like store number.

00:00:50.450 --> 00:00:54.200
There are many reasons why you
would want to spatially match data.

00:00:54.200 --> 00:00:58.050
For instance, the only way to count
how many customers fall within

00:00:58.050 --> 00:01:02.890
a store trade area is to match them,
and assign a store number to them.

00:01:02.890 --> 00:01:05.900
Then count the customers
by store number.

00:01:05.900 --> 00:01:08.640
By assigning a store
number to each customer,

00:01:08.640 --> 00:01:12.800
we could also use this to market
information about that store to them.

