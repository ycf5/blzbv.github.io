WEBVTT
Kind: captions
Language: en

00:00:01.090 --> 00:00:04.610
In this example I'm going to
join some core customer data

00:00:04.610 --> 00:00:07.930
with a data set that includes
their first purchase date so

00:00:07.930 --> 00:00:11.700
that I have that field appended
to the core customer data.

00:00:12.900 --> 00:00:15.370
I bring in the Join tool and

00:00:15.370 --> 00:00:20.050
attach the core customer data to
the left side marked with the L.

00:00:20.050 --> 00:00:23.680
And the first purchase
data to the right side.

00:00:23.680 --> 00:00:26.410
Whenever you bring in this tool,
the first thing you need

00:00:26.410 --> 00:00:28.960
to do is configure how
the join is going to happen.

00:00:30.440 --> 00:00:34.530
In this case, we have a customer
ID field in both data sets.

00:00:35.990 --> 00:00:40.070
One is called Customer ID and
the other is just called ID.

00:00:41.190 --> 00:00:43.630
So we can use this field for
both data sets.

00:00:44.640 --> 00:00:49.060
As you can see here, the ID field
can have different names but

00:00:49.060 --> 00:00:53.690
as long as you are manually defining
which fields to join together,

00:00:53.690 --> 00:00:59.630
then they will join if the same ID
number exits in each of the data sets.

00:00:59.630 --> 00:01:02.380
Let's run the workflow
to see the results.

00:01:02.380 --> 00:01:06.660
If we look closely at the join tool,
we can see three outputs.

00:01:06.660 --> 00:01:11.940
The J represents the data that was
joined together between the two sides.

00:01:11.940 --> 00:01:14.289
We can see the core
customer data on the left.

00:01:15.390 --> 00:01:18.280
And the first purchase
data on the right.

00:01:18.280 --> 00:01:22.026
Notice how the ID field we use
to join with is duplicated.

00:01:22.026 --> 00:01:25.480
Customer ID, and ID.

00:01:25.480 --> 00:01:30.040
We can go back to the Join tool and
deselect it from the right side, so

00:01:30.040 --> 00:01:32.250
it only comes through once.

00:01:32.250 --> 00:01:34.690
So deselect the ID field.

00:01:35.960 --> 00:01:38.480
And then we'll run the workflow again.

00:01:38.480 --> 00:01:42.190
Notice how the ID field is no
longer shown in the final result.

00:01:43.290 --> 00:01:47.140
If we take a look at the data
coming out of the L side,

00:01:47.140 --> 00:01:52.760
this is the data from the left input
that did not join to the right input.

00:01:52.760 --> 00:01:57.760
Because we're rejoining on that
customer ID field in the ID field,

00:01:57.760 --> 00:02:02.400
this one record with
an ID of 456 does not

00:02:02.400 --> 00:02:06.450
exist in the data coming
in from the right side.

00:02:06.450 --> 00:02:10.979
We have six unique IDs
coming in from the left and

00:02:10.979 --> 00:02:15.080
five unique IDs coming
in from the right.

00:02:15.080 --> 00:02:19.270
So the result is five records joined.

00:02:19.270 --> 00:02:21.860
With one record unjoined on the left.

00:02:23.200 --> 00:02:27.890
If we look at the right side output,
we see no records there,

00:02:27.890 --> 00:02:31.790
all of the input records from
the right side joined to the left.

00:02:31.790 --> 00:02:36.010
It's important to be able to see
what does not join in your data

00:02:36.010 --> 00:02:40.970
because this can help identify missing
records, dirty data or other issues

