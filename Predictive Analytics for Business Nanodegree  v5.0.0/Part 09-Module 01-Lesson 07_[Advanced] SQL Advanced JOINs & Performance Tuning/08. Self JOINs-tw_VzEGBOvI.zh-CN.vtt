WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.570
有时将表连接到自身可能很有用

00:00:04.570 --> 00:00:07.599
大多数情况下 这么做的目的在于找出

00:00:07.599 --> 00:00:11.059
两个事件相继出现的情况

00:00:11.060 --> 00:00:16.675
比如 假设你打算了解哪些客户在 30 天内多次下单

00:00:16.675 --> 00:00:20.030
一种方法是把订单表

00:00:20.030 --> 00:00:24.535
用不等式并集进行列的连接

00:00:24.535 --> 00:00:29.495
让我们快速地了解下这一并集的逻辑 因为它有一点点复杂

00:00:29.495 --> 00:00:34.579
首先 我们要确保我们在对同一客户进行并集

00:00:34.579 --> 00:00:37.034
因此 在第一张订单表里

00:00:37.034 --> 00:00:39.254
我们已经设置成 o1

00:00:39.255 --> 00:00:42.700
我们查找客户 ID 并与第二张订单表 o2 

00:00:42.700 --> 00:00:47.525
中的客户 ID 进行比较

00:00:47.524 --> 00:00:50.015
它真的是同一张表

00:00:50.015 --> 00:00:53.820
我们就是要把它与它自己进行并集并设置一个不同的别名

00:00:53.820 --> 00:01:01.000
因为我们想要的是 o1 记录之后 28 天内的 o2 中的记录

00:01:01.000 --> 00:01:03.270
我们将在并集子句里编写

00:01:03.270 --> 00:01:06.240
两个条件语句 都包括不等式

00:01:06.239 --> 00:01:13.579
首先 我们对 o2.occurred_at 大于 o1.occurred_at 的记录进行连接 

00:01:13.579 --> 00:01:18.644
因此 我们要找出初次订单下单后发生的订单

00:01:18.644 --> 00:01:25.574
然后 我们要找出 o1.occurred_at 发生后 o2.occurred_at 小于或等于 28 天的

00:01:25.575 --> 00:01:33.500
订单 因此我们将对记录加以时间限制

00:01:33.500 --> 00:01:36.114
要牢记的一点是 在执行表格内列的并集时

00:01:36.114 --> 00:01:39.089
你需要使用别名区分左侧表格

00:01:39.090 --> 00:01:42.030
与右侧表格 如果本例中 只是简单地定义一张表为订单

00:01:42.030 --> 00:01:45.525
那么将混淆两张表

00:01:45.525 --> 00:01:49.000
这里 我们再次使用 o1 和 02

