WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.530
你可以做的第二件事情是

00:00:01.530 --> 00:00:03.419
让合并不要那么复杂

00:00:03.419 --> 00:00:06.900
意思是 在合并时 你可以减少被评估的列数

00:00:06.900 --> 00:00:09.570
早先执行查询时 用同样的方式

00:00:09.570 --> 00:00:12.740
减少查询中的数据量比较好

00:00:12.740 --> 00:00:16.379
同时 合并前对表格进行瘦身也比较好

00:00:16.379 --> 00:00:21.719
比如 本例中要把客户表合并到事件表

00:00:21.719 --> 00:00:25.844
网络事件表有 9,073 列

00:00:25.844 --> 00:00:32.214
这意味着这 9,073 列需要进行评估以和其他表格匹配

00:00:32.215 --> 00:00:35.595
但是 如果网络事件表已进行了预先加总

00:00:35.594 --> 00:00:38.789
你就可以减少合并过程中需要评估的列数

00:00:38.789 --> 00:00:45.200
首先 我们来看看预先加总

00:01:02.159 --> 00:01:07.619
这一查询只返回 351 列

00:01:07.620 --> 00:01:10.700
因此 把这些结果加载到子查询中然后合并到其他查询

00:01:10.700 --> 00:01:15.621
可以大大降低合并成本

00:02:04.109 --> 00:02:08.150
在这一特殊案例中

00:02:08.150 --> 00:02:09.770
你不会注意到有很大区别

00:02:09.770 --> 00:02:14.385
这时因为 9,073 列对于数据库处理起来并不是太难

00:02:14.384 --> 00:02:17.359
但是 如果你需要处理几十万列甚至更多

00:02:17.360 --> 00:02:20.640
你就会注意到合并前进行加总带来的极大改进

00:02:20.639 --> 00:02:24.319
当你执行该操作时 要确保你正在进行的工作需要在逻辑上一致

00:02:24.319 --> 00:02:26.419
你需要关注你工作的准确度

00:02:26.419 --> 00:02:28.000
而不是只追求执行速度

