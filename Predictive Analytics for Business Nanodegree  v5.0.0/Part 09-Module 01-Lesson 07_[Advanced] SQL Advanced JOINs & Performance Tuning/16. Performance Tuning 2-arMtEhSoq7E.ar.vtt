WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:01.433
الأمر الثاني الذي يمكنك القيام به

00:00:01.533 --> 00:00:03.300
هو جعل عبارات الربط
باستخدام JOIN التي تكتبها أقل تعقيداً.

00:00:03.400 --> 00:00:06.800
ما يعني أنه يمكنك تقليص عدد الصفوف
التي يتم تقييمها أثناء الربط بـ"JOIN".

00:00:06.900 --> 00:00:09.467
على النحو ذاته الذي يكون فيه من الأفضل

00:00:09.567 --> 00:00:12.633
تقليص كم البيانات عند نقاط الاستعلام
التي يتم تنفيذها مبكراً،

00:00:12.733 --> 00:00:16.267
فإنه من الأفضل تقليص حجم الجداول
قبل ربطها باستخدام "JOIN".

00:00:16.367 --> 00:00:21.600
خذ هذا المثال الذي يربط
جدول الحسابات بجدول أحداث الويب.

00:00:21.700 --> 00:00:25.733
هنالك 9073 صف في جدول أحداث الويب.

00:00:25.833 --> 00:00:32.067
يعني هذا أنه يجب تقييم 9073 صف
لإيجاد مطابقات في الجدول الأخر.

00:00:32.167 --> 00:00:35.467
ولكن إن تم تجميع
جدول أحداث الويب مسبقاً،

00:00:35.567 --> 00:00:38.667
يمكنك تقليص عدد الصفوف
التي يجب تقييمها في عبارة الربط "JOIN".

00:00:38.767 --> 00:00:45.167
لننظر أولاً
إلى مرحلة التجميع السابق للربط فحسب.

00:01:02.167 --> 00:01:07.633
يعرض هذا الاستعلام 351 صفاً فقط.

00:01:07.733 --> 00:01:10.600
لذلك سيتسبب نقل هذا إلى استعلام فرعي
ومن ثم وصله بالاستعلام الخارجي

00:01:10.700 --> 00:01:15.600
بخفض تكلفة الربط بـ"JOIN"
من حيث زمن التشغيل إلى حد كبير.

00:02:04.133 --> 00:02:08.067
وفي هذه الحالة تحديداً،

00:02:08.167 --> 00:02:09.667
لن تلاحظ اختلافاً كبيراً

00:02:09.767 --> 00:02:14.300
لأنه ليس بالأمر الصعب
لقاعدة البيانات أن تعالج 9073 صفاً.

00:02:14.400 --> 00:02:17.267
ولكن إن كنت في صدد التعامل
مع مئات الآلاف الصفوف أو أكثر،

00:02:17.367 --> 00:02:20.533
فسترى تحسناً ملحوظاً إذا ما قمت
بالتجميع قبل الربط باستخدام "JOIN".

00:02:20.633 --> 00:02:24.200
تأكد عند قيامك بهذا
أن ما تفعله متسق منطقياً.

00:02:24.300 --> 00:02:26.300
ينبغي لك أن تهتم بدقة عملك

00:02:26.400 --> 00:02:28.367
قبل أن تهتم بسرعة تشغيله.

