WEBVTT
Kind: captions
Language: en

00:00:00.850 --> 00:00:04.839
Turning to the K-Centroids method for
clustering, we will recall that

00:00:04.839 --> 00:00:10.019
with this method, we have to actually
specify the number of clusters we want.

00:00:10.019 --> 00:00:14.309
So before we actually run a clustering
process that assigns objects to

00:00:14.310 --> 00:00:15.890
specific clusters,

00:00:15.890 --> 00:00:21.109
we need to consider how many clusters
will provide the best cluster solution.

00:00:22.910 --> 00:00:26.750
This really starts us down
the road of cluster validation.

00:00:26.750 --> 00:00:30.839
Cluster validation involves
the testing of a cluster solution

00:00:30.839 --> 00:00:33.590
to see just how good it is.

00:00:33.590 --> 00:00:37.620
You can validate clusters either
internally or externally.

00:00:37.619 --> 00:00:42.679
Internal validation refers to using
the data used to create the clusters

00:00:42.679 --> 00:00:44.719
to calculate an index.

00:00:44.719 --> 00:00:49.079
External validation refers to
the use of external data, or

00:00:49.079 --> 00:00:53.729
data outside the dataset that
was used to create the clusters.

00:00:53.729 --> 00:00:57.250
For now,
we will focus on internal validation.

00:00:57.250 --> 00:01:02.149
We will go through an exercise on
external validation later in the lesson.

00:01:02.149 --> 00:01:05.269
With internal validation,
it is typically best to

00:01:05.269 --> 00:01:09.730
evaluate results of the clustering
process that have been completed for

00:01:09.730 --> 00:01:12.650
a range of possible number of clusters.

00:01:12.650 --> 00:01:14.500
And compare the results for

00:01:14.500 --> 00:01:19.649
each cluster solution, using an index
that is based on the data itself.

00:01:22.150 --> 00:01:24.760
Now if you'll recall
from an earlier lesson,

00:01:24.760 --> 00:01:30.590
the two objectives behind clustering
are one, to create segments of objects

00:01:30.590 --> 00:01:35.850
where the objects within each segment
are as close to each other as possible.

00:01:35.849 --> 00:01:38.879
This is sometimes called compactness.

00:01:38.879 --> 00:01:45.589
And two, the actual segments himself are
far away from each other as possible.

00:01:45.590 --> 00:01:49.590
This is often called separateness or
distinctness.

00:01:49.590 --> 00:01:54.843
Many indices used to measure the best
number of clusters utilize both

00:01:54.843 --> 00:01:59.745
of this aspects, but they may
approach them in different ways.

00:01:59.745 --> 00:02:03.432
Now there are a number of indices
related to evaluating clusters that you

00:02:03.432 --> 00:02:06.650
can read about in
the instructor's notes.

00:02:06.650 --> 00:02:10.629
Each software package typically
will provide calculations for

00:02:10.629 --> 00:02:12.750
a certain set of indices.

00:02:12.750 --> 00:02:17.479
In this class, we will be looking
at two off the common indices used

00:02:17.479 --> 00:02:19.939
that are available within Alteryx.

00:02:19.939 --> 00:02:24.729
These two have been in use in statistics
for some time and have been accepted for

00:02:24.729 --> 00:02:26.030
their validation aspects.

00:02:27.310 --> 00:02:33.340
They are the Adjusted Rand Index and
the Calinski-Harabasz Index,

00:02:33.340 --> 00:02:38.300
which for obvious reasons,
I'm going to refer to as the CH Index.

00:02:38.300 --> 00:02:42.820
The Adjusted Rand Index is used to
measure how similar the objects within

00:02:42.819 --> 00:02:44.349
the cluster are.

00:02:44.349 --> 00:02:47.409
We call this cluster stability.

00:02:47.409 --> 00:02:51.849
The CH index is used to measure
both the compactness, and

00:02:51.849 --> 00:02:54.918
the distinctness, or
separation of the clusters themselves.

00:02:56.050 --> 00:03:00.610
For both indices, the objective is
to choose the number of clusters for

00:03:00.610 --> 00:03:05.110
an analysis where the calculated
index is at its highest point.

