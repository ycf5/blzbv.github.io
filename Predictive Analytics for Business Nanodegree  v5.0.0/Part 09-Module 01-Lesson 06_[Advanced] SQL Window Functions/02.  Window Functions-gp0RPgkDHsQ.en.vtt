WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.660
The most practical example of a Window function is a running total.

00:00:04.660 --> 00:00:07.305
For example, let's say you want to calculate

00:00:07.305 --> 00:00:10.350
a running total of how much standard paper Parch and Posey

00:00:10.350 --> 00:00:13.420
has sold to date.

00:00:35.818 --> 00:00:40.500
You can see that this query creates an aggregation,

00:00:40.500 --> 00:00:44.075
running total, without using group by.

00:00:44.075 --> 00:00:47.470
Let's break down the syntax and see how it works.

00:00:47.470 --> 00:00:52.460
The first part of this aggregation looks a lot like any other aggregation.

00:00:52.460 --> 00:00:55.725
Adding over, designates it as a Window function.

00:00:55.725 --> 00:00:58.170
You could read the above aggregation as,

00:00:58.170 --> 00:01:00.690
take the sum of standard quantity,

00:01:00.690 --> 00:01:04.980
across all rows leading up to a given row,

00:01:04.980 --> 00:01:08.305
in order by occurred at.

00:01:08.305 --> 00:01:10.230
Let's say that instead,

00:01:10.230 --> 00:01:14.470
we want to start the running total over at the beginning of each month.

00:01:14.470 --> 00:01:19.556
To narrow the window from the entire dataset to individual groups within a data set,

00:01:19.556 --> 00:01:35.393
you use the partition by function.

00:01:35.393 --> 00:01:42.070
Now this query groups and orders the query

00:01:42.070 --> 00:01:44.590
by the month in which the transaction occurred.

00:01:44.590 --> 00:01:48.710
Within each month, it's ordered by occurred at.

00:01:48.710 --> 00:01:50.245
And the running total,

00:01:50.245 --> 00:01:55.790
sums across that current row and all previous rows of standard quantity.

00:01:55.790 --> 00:01:59.725
That's what happens when you group using partition by.

00:01:59.725 --> 00:02:03.200
In case you're still stumped by order by,

00:02:03.200 --> 00:02:08.990
it simply orders the designated columns the same way the order by clause would,

00:02:08.990 --> 00:02:13.240
except that it treats every partition as separate.

00:02:13.240 --> 00:02:15.115
It also creates the running total.

00:02:15.115 --> 00:02:18.250
Without order by, each value will simply be

00:02:18.250 --> 00:02:23.185
a sum of all the standard quantity values in its respective month.

00:02:23.185 --> 00:02:25.225
To get a clearer picture,

00:02:25.225 --> 00:02:30.120
here's what happens when we run this query without order by.

00:02:34.010 --> 00:02:40.240
The order and partition defined what's referred to as the window.

00:02:40.240 --> 00:02:45.000
The ordered subset of data over which all these calculations are made.

