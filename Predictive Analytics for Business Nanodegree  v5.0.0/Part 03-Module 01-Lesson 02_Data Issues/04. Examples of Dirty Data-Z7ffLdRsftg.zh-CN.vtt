WEBVTT
Kind: captions
Language: zh-CN

00:00:00.950 --> 00:00:04.560
我们涵盖污染数据的原因是让你思考

00:00:04.560 --> 00:00:05.470
应该在数据组中寻找什么

00:00:06.570 --> 00:00:09.150
然后我们会覆盖如何在进行分析前

00:00:09.150 --> 00:00:11.590
清理或处理数据

00:00:11.590 --> 00:00:17.800
当我回想见过的所有污染数据的案例 我会想起

00:00:17.800 --> 00:00:22.730
未被恰当解析的数据 它全部出现在一列而不是几个列里

00:00:23.840 --> 00:00:26.610
数据列中多余的字符会增添

00:00:26.610 --> 00:00:28.380
使用数据的难度

00:00:28.380 --> 00:00:33.790
因为那些多余的字符需要在运行分析前移除

00:00:33.790 --> 00:00:34.840
错误拼写的数据或

00:00:34.840 --> 00:00:39.150
错别字很容易在手动输入数据时发生

00:00:39.150 --> 00:00:43.730
重复数据记录可能会出现因为同一信息

00:00:43.730 --> 00:00:45.690
有多条数据输入

00:00:45.690 --> 00:00:49.720
不正确数据 比如数据日期为1900年1月1日

00:00:49.720 --> 00:00:55.720
这可能会出现在某一用户使用的系统要求一个值

00:00:55.720 --> 00:00:57.630
但是在当时并没有可用值的情况下

00:00:57.630 --> 00:01:02.440
商业惯例可能会输入一个特定的日期

00:01:02.440 --> 00:01:07.530
使其显得明显很远 比如1900年1月1日

00:01:07.530 --> 00:01:11.530
数据与其预想的格式不同

00:01:11.530 --> 00:01:15.470
比如 我们可能有一列邮箱地址

00:01:15.470 --> 00:01:18.348
但并非所有邮箱地址都是恰当的格式

00:01:18.348 --> 00:01:21.073
比如 name@domain

00:01:21.073 --> 00:01:23.220
我们还可以想象其它的例子

00:01:23.220 --> 00:01:26.910
但是为了方便理解如何辨认污染数据

00:01:26.910 --> 00:01:30.460
以及修补它 我们将会来解决这三个问题

00:01:30.460 --> 00:01:35.240
数据解析、多余字符和列、重复数据

00:01:35.240 --> 00:01:39.450
让我们开始详细探讨第一个问题 数据的不正确解析

